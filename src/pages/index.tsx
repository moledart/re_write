import { createNextApiHandler } from '@trpc/server/adapters/next';
import type { NextPage } from 'next';
import Head from 'next/head';
import NoteEditor from '../components/NoteEditor';
import NotesList from '../components/NotesList';
import Sidebar from '../components/Sidebar';
import { trpc } from '../utils/trpc';

const Home: NextPage = () => {
  const { data: categories, isLoading } = trpc.useQuery(['category.getAll']);
  const ctx = trpc.useContext();
  // TODO: ADD NEW CATEGORY FUNC
  const addCategory = trpc.useMutation('category.addCategory', {
    onMutate: () => {
      ctx.cancelQuery(['category.getAll']);
      let optimisticUpdate = ctx.getQueryData(['category.getAll']);
      if (optimisticUpdate) {
        ctx.setQueryData(['category.getAll'], optimisticUpdate);
      }
    },
    onSettled: () => {
      ctx.invalidateQueries(['category.getAll']);
    },
  });

  const handleAddCategory = (name: string) => {
    addCategory.mutate({ name });
  };

  console.log(categories);

  if (isLoading) return <p>Loading</p>;
  return (
    <>
      <Head>
        <title>re:write</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="min-h-screen grid grid-cols-6">
        <Sidebar
          handleAddCategory={handleAddCategory}
          categories={categories}
        />
        <NotesList />
        <NoteEditor />
      </main>
    </>
  );
};

export default Home;
